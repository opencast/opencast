/**
 * Licensed to The Apereo Foundation under one or more contributor license
 * agreements. See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 *
 * The Apereo Foundation licenses this file to you under the Educational
 * Community License, Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of the License
 * at:
 *
 *   http://opensource.org/licenses/ecl2.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *
 */


@mixin triangle-point($position, $width, $height, $position-from-right: 10px, $background-color: $white, $border-stroke: 1px, $border-color: darken($main-border-color, 5%), $position-from-origin: 1) {

    @if $position == top {

        &:before,
        &:after {
            content: "";
            position: absolute;
            right: $position-from-right;
            width: 0;
            height: 0;
            border-style: solid;
        	border-width: 0 $width $height $width;
        }

        &:after {
            top: - ($height + $position-from-origin);
            border-color: transparent transparent $border-color transparent;
        }

        &:before {
            top: - (($height + $position-from-origin) - $border-stroke);
            border-color: transparent transparent $background-color transparent;
            z-index: $z-100;
        }
    }

    @if $position == bottom {

        &:before,
        &:after {
            content: "";
            position: absolute;
            right: $position-from-right;
            width: 0;
            height: 0;
            border-style: solid;
        	border-width: 0 $width $height $width;
        }

        &:after {
            bottom: - ($height + $position-from-origin);
            border-color: transparent transparent $border-color transparent;
        }

        &:before {
            bottom: - (($height + $position-from-origin) + $border-stroke);
            border-color: transparent transparent $background-color transparent;
            z-index: $z-100;
        }
    }
}