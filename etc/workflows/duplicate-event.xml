<?xml version="1.0" encoding="UTF-8" ?>
<definition xmlns="http://workflow.opencastproject.org">

  <id>duplicate-event</id>
  <title>Duplicate Event</title>
  <tags>
    <tag>archive</tag>
  </tags>
  <description/>
  <displayOrder>10</displayOrder>
  <configuration_panel>
<![CDATA[
      <div id="workflow-configuration">
        <fieldset>
          <br/>
          <div>
            <label for="mpTitle" style="width: 150px;">Title of Duplicate:</label>
            <input id="mpTitle" name="mpTitle" type="text" style="width: 400px;" value=" " class="configField" />
          </div>
          <br/>
          <div>
            <label for="seriesId" style="width: 150px;">Series Id:</label>
            <input id="seriesId" name="seriesId" type="text" maxlength="255" style="width: 400px;" value=" " class="configField" />
          </div>
          <br/>
          <div>
            <label for="startDateTime" style="width: 150px;">Date time:</label>
            <input id="startDateTime" name="startDateTime" type="datetime-local" style="width: 300px;" class="configField" required />
          </div>
          <br/>
          <div>
            <label for="numberOfEvents" style="width: 150px;">Number of Events</label>
            <input
              id="numberOfEvents"
              name="numberOfEvents"
              type="number"
              class="configField"
              onkeypress="return event.charCode > 47"
              oninput="checkValueInBounds()"
              min="1"
              value="1"
              max="25"
            />
          </div>
          <br/>
          <div>
            <fieldset>
              <input id="noCopySuffix" name="noCopySuffix" type="checkbox" class="configField" value="false" />
              <label for="noCopySuffix">Do not use copy suffix</label>
            </fieldset>
          </div>
        </fieldset>
      </div>

      <script type="text/javascript">
        function checkValueInBounds() {
          var value = $('#numberOfEvents').val();
          var max = $('#numberOfEvents').attr('max');
          var min = $('#numberOfEvents').attr('min');
          if (parseInt(value) < parseInt(min)) $('#numberOfEvents').val(min);
          if (parseInt(value) > parseInt(max)) $('#numberOfEvents').val(max);
        }

        $.fn.setNow = function (onlyBlank) {
          var now = new Date($.now()), year, month, date, hours, minutes, seconds, formattedDateTime;
          year = now.getFullYear();
          month = now.getMonth().toString().length === 1 ? '0' + (now.getMonth() + 1).toString() : now.getMonth() + 1;
          date = now.getDate().toString().length === 1 ? '0' + (now.getDate()).toString() : now.getDate();
          hours = now.getHours().toString().length === 1 ? '0' + now.getHours().toString() : now.getHours();
          minutes = now.getMinutes().toString().length === 1 ? '0' + now.getMinutes().toString() : now.getMinutes();
          seconds = now.getSeconds().toString().length === 1 ? '0' + now.getSeconds().toString() : now.getSeconds();
          formattedDateTime = year + '-' + month + '-' + date + 'T' + hours + ':' + minutes + ':' + seconds;

          if ((onlyBlank === true) && $(this).val()) {
            return this;
          }
          $(this).val(formattedDateTime);
          return this;
        }

        $(function () {
            $('input[type="datetime-local"]').setNow();
        });

      </script>
    ]]>
  </configuration_panel>
  <configuration_panel_json>
    [
      {
        "description": "Title of Duplicate:",
        "fieldset": [
          {
            "name": "mpTitle",
            "type": "text",
            "value": " "
          }
        ]
      },
      {
        "description": "Series Id:",
        "fieldset": [
            {
            "name": "seriesId",
            "type": "text",
            "value": " "
          }
        ]
      },
      {
        "description": "Insert the number of duplicated events",
        "fieldset": [
          {
            "name": "numberOfEvents",
            "type": "number",
            "label": "Number of Events",
            "min": "1",
            "max": "25",
            "value": "1"
          }
        ]
      },
      {
        "fieldset": [
          {
            "name": "noCopySuffix",
            "type": "checkbox",
            "label": "Do not use copy suffix",
            "value": false
          }
        ]
      }
    ]
  </configuration_panel_json>
  <state-mappings>
    <state-mapping state="running">EVENTS.EVENTS.STATE_MAPPING.DUPLICATING</state-mapping>
    <state-mapping state="failing">EVENTS.EVENTS.STATE_MAPPING.DUPLICATING</state-mapping>
  </state-mappings>
  <operations>

    <!-- Create the new events -->

    <operation
      id="duplicate-event"
      exception-handler-workflow="partial-error"
      description="Duplicate Event">
      <configurations>
        <configuration key="source-flavors">*/*</configuration>
        <configuration key="number-of-events">${numberOfEvents}</configuration>
        <configuration key="set-series-id">${seriesId}</configuration>
        <configuration key="set-title">${mpTitle}</configuration>
        <configuration key="set-start-date-time">${startDateTime}</configuration>
        <configuration key="target-tags"></configuration>
        <configuration key="property-namespaces">org.opencastproject.assetmanager.security,org.opencastproject.workflow.configuration</configuration>
        <configuration key="no-suffix">${noCopySuffix}</configuration>
        <configuration key="copy-number-prefix">copy</configuration>
      </configurations>
    </operation>

    <operation
      id="start-workflow">
      <configurations>
        <configuration key="media-packages">${duplicate_media_package_ids}</configuration>
        <configuration key="workflow-definition">fast</configuration>
      </configurations>
    </operation>

    <!-- Clean up work artifacts -->

    <operation
      id="cleanup"
      fail-on-error="false"
      description="Remove temporary processing artifacts">
      <configurations>
        <!-- On systems with shared workspace or working file repository -->
        <!-- you want to set this option to false. -->
        <configuration key="delete-external">true</configuration>
        <!-- ACLs are required again when working through ActiveMQ messages -->
        <configuration key="preserve-flavors">security/*</configuration>
      </configurations>
    </operation>

  </operations>
</definition>
