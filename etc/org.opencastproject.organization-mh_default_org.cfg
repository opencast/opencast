# Organization (tenant) definition.
#
# With Opencast being capable of hosting multiple tenants per installation, there needs
# to be one organization configuration per tenant.
#
# Therefore, in order to add another tenant to the installation, put a file named
# org.opencastproject.organization-<tenant id>.cfg into Opencast's "load" directory.
# Make sure to adjust at least the following fields to properly map the new tenant to the
# installation:
#
#   - id
#   - server
#   - port
#   - prop.org.opencastproject.admin.ui.url
#   - prop.org.opencastproject.engage.ui.url
#   - prop.org.opencastproject.external.api.url
#   - prop.org.opencastproject.assetmanager.url
#

# Identifier of the tenant on this Opencast installation.
#
# The identifier is used to map data that belongs to this tenant only as well as during
# lookup of related configuration entities such as the security settings in etc/security.
#
# Value: a text identifier using [a-Z, 0..9, _, -] as characters.
#
id=mh_default_org

# Name of the organization (tenant).
#
# Value: <text>
#
name=Opencast Project

# Server name that identifies the organization (tenant) on this Opencast installation.
#
# Use the public url that is assigned to this tenant. In out-of-the-box installations
# with only one tenant, this value corresponds to the server.url in etc/config.properties.
# Make sure to adjust these two keys accordingly:
#
#   - prop.org.opencastproject.admin.ui.url
#   - prop.org.opencastproject.engage.ui.url
#
# Value: <hostname without schema and port>
#
server=localhost

# Port for this tenant.
#
# When run behind a proxy server, set this to -1 since most proxies won't forward the
# original port and set the corresponding field in the request to this value.
#
# Value: <integer port number>
#
port=8080

# Identifier of the Administrative role.
#
# Value: a text identifier using [a-Z, 0..9, _, -] as characters.
# Default: ROLE_ADMIN
#
admin_role=ROLE_ADMIN

# Identifier of the Anonymous role.
#
# Value: a text identifier using [a-Z, 0..9, _, -] as characters.
# Default: ROLE_ANONYMOUS
#
anonymous_role=ROLE_ANONYMOUS

# The username and password for capture agents.
#prop.org.opencastproject.security.capture_agent.user=opencast_ca
#prop.org.opencastproject.security.capture_agent.pass=CHANGE_ME

# Optional extra roles for the capture agent user. These roles may be used to manage which series are visible to the capture agent.
#prop.org.opencastproject.security.capture_agent.roles=ROLE_ONE, ROLE_TWO, ROLE_THREE


# The base URL of the file server. When using a shared filesystem between servers, set all servers to use the same URL.
# Only then will hard linking between the working file repository and the workspace be enabled to prevent downloads.
#
# Value: <a complete url with scheme and port>
# Default: the value of ${org.opencastproject.server.url}
#
#prop.org.opencastproject.file.repo.url=${prop.org.opencastproject.admin.ui.url}

# Link to the Admin UI.
#
# Value: <a complete url with scheme and port>
# Default: ${org.opencastproject.server.url}
#
#prop.org.opencastproject.admin.ui.url=http://localhost:8080

###
# OAI-PMH

# The host URL of the OAI-PMH server. Remember to omit the mount point since it is read
# from custom.properties -> org.opencastproject.oaipmh.mountpoint
prop.org.opencastproject.oaipmh.server.hosturl=${prop.org.opencastproject.engage.ui.url}

# Link to the Opencast documentation.
#
# If the property is specified, the admin ui help menu will link to the documentation.
# The value needs to be a URL if set.
# Default: undefined
prop.org.opencastproject.admin.help.documentation.url=http://docs.opencast.org

# Link to the Opencast REST service documentation for the local system.
#
# If the property is specified, the admin ui help menu will link to the documentation.
# The value needs to be a URL if set.
# Default: undefined
prop.org.opencastproject.admin.help.restdocs.url=/rest_docs.html

# Link to the media module
#
# If the property is specified, the admin ui will show a media module icon on the top-right that links
# to the media module.
# The value needs to be a URL if set.
# Default: undefined
prop.org.opencastproject.admin.mediamodule.url=${prop.org.opencastproject.engage.ui.url}/engage/ui

# Link to a JIRA feedback widget collector.
#
# If the property is specified, the feedback button in the lower right corner will
# link to the widget and allow to create issues right inside the project. If the
# property is not specified, the feedback button will be hidden.
#
# Value: <a complete url with scheme and port>
#
#prop.org.opencastproject.admin.feedback.url=

# Link to the Engage UI.
#
# Value: <a complete url with scheme and port>
# Default: ${org.opencastproject.server.url}
#
#prop.org.opencastproject.engage.ui.url=http://localhost:8080

# Link to the RSS and atom feed base
#
# Value: <a complete url with scheme and port>
# Default: ${org.opencastproject.server.url}
#
#prop.org.opencastproject.feed.url=http://localhost:8080

# Link to the External API
#
# Value: <a complete url with scheme and port>
# Default: ${org.opencastproject.server.url}
#
#prop.org.opencastproject.external.api.url=http://localhost:8080

# Link to the AssetManager base
#
# Value: <a complete url with scheme and port>
# Default: ${org.opencastproject.server.url}
#
#prop.org.opencastproject.assetmanager.url=http://localhost:8080

# Path to the logo that is displayed in the upper left part of the
# media module page.
#
# Value: <a complete url with scheme and port>
#
prop.logo_mediamodule=/engage/ui/img/logo/opencast-icon.svg

# Path to the logo that is displayed in the Opencast 2.0 player
#
# Value: <a complete url with scheme and port>
#
prop.logo_player=/engage/theodul/ui/img/opencast.svg

# Define size of Chunksize on upload in KB.
#
# Value: <integer>
# Default: 2048
#
prop.adminui.chunksize=2048

# Set a flag to display External Roles on User modal
#
# Value: <boolean>
# Default: false
prop.adminui.user.external_role_display=false

# Name of the list to provide a user listing as used in the group editor of the admin ui.
#
# Values:
# - USERS.INVERSE will list users by name (e.g. "John Sample")
# - USERS.INVERSE.WITH.EMAIL will list users by name and email (e.g. "John Sample <j.sample@opencast.org>")
# - USERS.INVERSE.WITH.USERNAME will list users by name and username (e.g. "John Sample (jsample)")
# Default: USERS.INVERSE.WITH.USERNAME
#prop.adminui.user.listname=USERS.INVERSE.WITH.USERNAME

# Defines whether to display the default login and username on the login page
#
# Values: true | false
# Default: false
#
prop.login.display_defaults=true

# Flag for displaying the download link.
#
# Values: true, false
# Default:
#
prop.engageui.link_download.enable=false

# Flag for enabling annotations globally.
#
# Values: true, false
# Default: true
#
prop.engageui.annotations.enable=true

# Flag for displaying the media module.
#
# Values: true, false
# Default: true
#
prop.engageui.links_media_module.enable=true

# Flag for displaying a redirect when surfing with a mobile device
#
# Values: true, false
# Default: false
#
prop.engageui.link_mobile_redirect.enable=false

# URL for the mobile redirect.
#
# Value: A URL for a html URL tag
# Default: <none>
#
prop.engageui.link_mobile_redirect.url=http://opencast.org/

# Description for the mobile redirect.
#
# Value: <text>
# Default: <none>
#
prop.engageui.link_mobile_redirect.description=For more information have a look at the official site.

#
# USER TRACKING IN PLAYER
# These settings allow a tracking of user interaction with Matomo (https://matomo.org/) in the Opencast Player
# Only if a Matomo server is provided the Matomo plugin will be activated.
#

# The Matomo server from which the Piwik JS library will be loaded and where the data will be reported
# prop.player.matomo.server=http://localhost/matomo

# The Matomo site ID has to be numeric value. If not set this will be 1.
# prop.player.matomo.site_id=1

# The heartbeat setting to track how long a user stayed on the player page. Set to 0 or comment this line to
# disable the heartbeat
# prop.player.matomo.heartbeat=30

# Notification that matomo is tracking the user, set to false to disable notifications (default true)
# prop.player.matomo.notification=true

# This setting lets you track several player events. Add the events that you want to track to the list. Comment this
# line to prevent event tracking
# Events that can be tracked:
# - play: play has been pressed (will also be called if after seeking).
# - pause: pause has been pressend (will also be called if before seeking).
# - seek: user jumps to a different time. Time in seconds will be stored
# - ended: video has reached the end
# - playbackrate: user changes the playback speed (values 0.75 to 3.00)
# - volume: Volume change by the user value 0.0 to 1.0
# - quality: manual change of video quality (quality tag is stored)
# - fullscreen: user presses fullscreen button
# - focus: user selects one video to be enlarged (flavor of selected video is stored)
# - layout_reset: user switches back to default layout
# - zoom: user changes the zoom of the video
# prop.player.matomo.track_events=play, pause, seek, ended, playbackrate, volume, quality, fullscreen, focus, layout_reset, zoom

# Path to the default video player used by the engage interfaces and the LTI tools. Parameters for selecting the
# specific videos will be appended automatically.  Common values include:
# - theodul player: /engage/theodul/ui/core.html
# - paella  player: /paella/ui/watch.html
prop.player=/engage/theodul/ui/core.html

# The default flavor of the master video (the video on the "left side" in the video display)
prop.player.mastervideotype=presenter/delivery

# Play only videos that are tagged with one of these tags
# default: don't filter for tags at all
prop.player.allowedtags=engage-download,engage-streaming

# Play only videos that use these video/streaming formats.
# The format setting in the browser will be done for what is left after these have been filtered
# with this setting.
# default: don't filter for video/streaming formats at all
# allowed values: hls,dash,rtmp,mp4,webm,audio
# prop.player.allowedformats=hls,dash,mp4

# Choose where the controls will be rendered
# Options:
#   - top
#   - bottom
prop.player.positioncontrols=bottom

# Choose which layout should be applied if none is stored in the local storage of the browser
# Options:
#   - left
#   - right
#   - beside
#   - off (default)
prop.player.layout=off

# Choose which flavor (without subflavor) should be focused in the layout if none is stored in the local storage.
# The focused flavor will only be used if prop.player.layout is not "off".
prop.player.focusedflavor=presentation

# Hide the browser context menu on video elements (true|false)
# Default: false
prop.player.hide_video_context_menu=false

# Link back to Media Module from Theodul player (true|false)
# Default: false
prop.link_mediamodule=true

# Link back to Media Module from Theodul player (true|false)
# Default: false
prop.show_embed_links=true

# Shortcut definitions for the html5 player
# - modifier keys
#   - shift
#   - ctrl
#   - alt
#   - option
#   - meta
#   - command
#   - mod -- combines Mac 'command' and Windows/Linux 'ctrl'
# - special keys
#   - backspace
#   - tab
#   - enter
#   - return
#   - capslock
#   - esc
#   - escape
#   - space
#   - pageup
#   - pagedown
#   - end
#   - home
#   - left
#   - up
#   - right
#   - down
#   - ins
#   - del
#   - plus
# - any other key
#   - should be referenceable by name like a, /, $, *, or =
# - for more information have a look at the player docs
prop.player.shortcut.controls.playPause=space
prop.player.shortcut.controls.seekRight=right
prop.player.shortcut.controls.seekLeft=left
prop.player.shortcut.controls.jumpToBegin=backspace
prop.player.shortcut.controls.prevChapter=pagedown
prop.player.shortcut.controls.nextChapter=pageup
prop.player.shortcut.playbackrate.increase=t
prop.player.shortcut.playbackrate.decrease=T
prop.player.shortcut.volume.muteToggle=m
prop.player.shortcut.volume.up=9
prop.player.shortcut.volume.down=8
prop.player.shortcut.fullscreen.enable=mod+enter
prop.player.shortcut.fullscreen.cancel=escape
prop.player.shortcut.layout.focusNext=>
prop.player.shortcut.layout.focusPrev=<
prop.player.shortcut.layout.movePiP=p
prop.player.shortcut.layout.togglePiP=o
prop.player.shortcut.zoom.moveLeft=a
prop.player.shortcut.zoom.moveRight=d
prop.player.shortcut.zoom.moveUp=w
prop.player.shortcut.zoom.moveDown=s
prop.player.shortcut.zoom.in=plus
prop.player.shortcut.zoom.out=-

prop.player.shortcut-sequence=controls,volume,playbackrate,layout,zoom,fullscreen

# Shortcut definitions for admin UI video player
# Format: prop.admin.shortcut.player<action>=<key>
prop.admin.shortcut.player.play_pause=space
prop.admin.shortcut.player.previous_frame=left
prop.admin.shortcut.player.next_frame=right
prop.admin.shortcut.player.previous_segment=up
prop.admin.shortcut.player.next_segment=down
prop.admin.shortcut.player.step_backward=ctrl+left
prop.admin.shortcut.player.step_forward=ctrl+right
prop.admin.shortcut.player.volume_up=plus
prop.admin.shortcut.player.volume_down=-
prop.admin.shortcut.player.mute=m

# Shortcut definitions for admin UI video editor
# Format: prop.admin.shortcut.editor.<action>=<key>
prop.admin.shortcut.editor.split_at_current_time=v
prop.admin.shortcut.editor.cut_selected_segment=backspace
prop.admin.shortcut.editor.play_current_segment=c
prop.admin.shortcut.editor.play_current_segment_with_pre-roll=C
prop.admin.shortcut.editor.play_ending_of_current_segment=n
prop.admin.shortcut.editor.clear_list=ctrl+backspace

# Shortcut definitions for admin UI video editor
# Format: prop.admin.shortcut.general.<action>=<key>
prop.admin.shortcut.general.new_event=n
prop.admin.shortcut.general.new_series=N
prop.admin.shortcut.general.event_view=e
prop.admin.shortcut.general.series_view=s
prop.admin.shortcut.general.remove_filters=r
prop.admin.shortcut.general.select_next_dashboard_filter=f
prop.admin.shortcut.general.select_previous_dashboard_filter=F
prop.admin.shortcut.general.main_menu=m

# Default values for fields in the tab Source of the Add Event wizard
#
# Automatically populates fields in the tab Source of the Add Event wizard.
# The fields populated are 'Start Date', 'Start Time', 'End Time' and 'Duration' which are set as follows:
#
#  Start Date: Current day if the calculated timeslot is earlier than the cutoff time for the day, or the next day,
#              i.e. today if possible, otherwise tomorrow.
#  Start Time: Current time rounded up to the next available timeslot, or the first available timeslot on the next day.
#  Duration:   The default duration of events
#  End Time:   Start Time + Duration (implicit end date may be on next day)

# Start time of first timeslot in the day
# Format: HH:mm
# Default: 08:00
#prop.admin.event.new.start_time=08:00

# Cut-off time for recordings in the day
# Format: HH:mm
# Default: 20:00
#prop.admin.event.new.end_time=20:00

# Duration of event recording in minutes
# Default: 55
#prop.admin.event.new.duration=55

# Interval between recording start times in minutes
# Default: 60
#prop.admin.event.new.interval=60

# Note: prop.admin.event.new.duration need not match prop.admin.event.new.interval;
#       this is to allow short intermissions between consecutive events.

#
# Display durations for different notification types in SECONDS.
#
# If you specify the value -1 the notification will remain until manually closed by the user.

# Display duration for notification type error
#
# Format: A integer or -1
# Default: -1
#
#prop.admin.notification.duration.error=-1

# Display duration for notification type success
#
# Format: A integer or -1
# Default: 5
#
#prop.admin.notification.duration.success=5

# Display duration for notification type warning
#
# Format: A integer or -1
# Default: 5
#
#prop.admin.notification.duration.warning=5

# If the preview mode in the video editor is enabled per default.
#
# Format: Boolean
# Default: true
#
#prop.admin.editor.previewmode.default=true
