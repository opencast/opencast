#This is the config file for the IngestServiceImpl

# Control if all catalogs sent by capture agents for scheduled events are skipped. Not skipping them means that they will
# potentially overwrite existing metadata catalogs in Opencast.
#
# Default: false
#
#skip.catalogs.for.existing.events=false

# Control if all attachments sent by capture agents for scheduled events are skipped. Not skipping them means that they will
# potentially overwrite existing attachments in Opencast.
#
# Default: false
#
#skip.attachments.for.existing.events=false

# Control if some attachments and catalogs sent by capture agents for scheduled are added only if they do not overwrite
# existing attachments and catalogs of the same flavor in Opencast. Not restricting to only new catalogs and attachments means
# that ingested ones with flavors that match existing catalogs and attachments in Opencast will be overwritten.
#
# Note: if the skip catalogs and skip attachments parameters, above, are set to true, new catalogs and attachments are also skipped.
#
# Default: true
#
#add.only.new.catalogs.attachments.for.existing.events=true

# *Deprecated*
# Control to allow an Opencast series to be modified if an event is ingested. Enabling this feature is not recommended.
# Enabling series overwrite during event ingest will potentially start an event update chain reaction affecting all events associated
# to that series in Opencast. Every time an event is ingested.
#
# Default is false
# *Deprecated*
#org.opencastproject.series.overwrite=false

# The approximate load placed on the system by ingesting a file
# Since these jobs are *not* dispatched there is no current way to limit the simultaneous number of ingests, but these jobs will block further jobs from running on an already busy admin node
# These jobs involve heavy I/O, so we want them to be expensive, but not cripplingly so
# Default: 0.2
#job.load.ingest.file=0.2

# The approximate load placed on the system by ingesting a zip file
# Since these jobs are *not* dispatched there is no current way to limit the simultaneous number of ingests, but these jobs will block further jobs from running on an already busy admin node
# These jobs involve heavy I/O, so we want them to be expensive
# Default: 0.2
#job.load.ingest.zip=0.2

# The Ingest Service is capable of downloading tracks/attachments itself from URLs.
# The credentials can be set for an external source (example: https://develop.opencast.org).
# For example, this can be used to make Opencast download files from another Opencast.
# The source is written as a regular expression.
# auth.method can either be "Digest" or "Basic".
# If auth.force_basic is true and method is Basic requests are always authenticated.
# Example for two sources: (.*)//develop.opencast.org/(.*)|(.*)//stable.opencast.org/(.*)
# Default: <empty>
#org.opencastproject.download.source = http://localhost/.*
#org.opencastproject.download.auth.method = Digest
#org.opencastproject.download.auth.force_basic = false
#org.opencastproject.download.user = opencast_system_account
#org.opencastproject.download.password = CHANGE_ME

# Set the string added to the name of auto generated CA series. Events without series are added to the corresponding CA
# series if set. This ensures that an event without series is still accessible for users with rights to the CA. Leaving
# the string blank deactivates this function.
#
# Default: <empty>
#
#add.series.to.event.appendix = _CA_series
